services:
  evolution-api:
    container_name: adri_evolution_api
    image: atendai/evolution-api:latest
    restart: always
    ports:
      - "8888:8080"
    env_file: .env
    volumes:
      - ./data/evolution-api/instances:/evolution/instances
    depends_on:
      - db-adri
      - evolution-redis
    networks:
      - adri-network

  evolution-redis:
    container_name: adri_evolution_redis
    image: redis
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    networks:
      - adri-network

  db-adri:
    image: postgres:15-alpine
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASS}
    networks:
      - adri-network
      - appsmith-network
      - cloudbeaver
    ports:
      - "54324:5432"

  typebot-builder:
    image: baptistearno/typebot-builder:latest
    restart: always
    depends_on:
      - db-adri
    ports:
      - '3057:3000'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file: .env
    environment:
      - DATABASE_URL=${TYPEBOT_DATABASE_URL}
    networks:
      - adri-network

  typebot-viewer:
    image: baptistearno/typebot-viewer:latest
    restart: always
    depends_on:
      - db-adri
    ports:
      - '3056:3000'
    env_file: .env
    environment:
      - DATABASE_URL=${TYPEBOT_DATABASE_URL}
    networks:
      - adri-network

  chatwoot-base: &chatwoot-base
    image: chatwoot/chatwoot:latest
    env_file: .env.chatwoot
    volumes:
      - ./data/chatwoot/storage:/app/storage
    networks:
      - adri-network

  chatwoot-rails:
    <<: *chatwoot-base
    depends_on:
      - db-adri
      - chatwoot-redis
    ports:
      - '${CHATWOOT_PORT}:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    networks:
      - adri-network

  sidekiq:
    <<: *chatwoot-base
    depends_on:
      - db-adri
      - chatwoot-redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    networks:
      - adri-network

  chatwoot-redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - ./data/chatwoot/redis:/data
    networks:
      - adri-network

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - N8N_TRUST_PROXY=true
      - N8N_SMTP_HOST=${SMTP_HOST}
      - N8N_SMTP_PORT=${SMTP_PORT}
      - N8N_SMTP_USER=${SMTP_USERNAME}
      - N8N_SMTP_PASS=${SMTP_PASSWORD}
      - N8N_SMTP_SENDER="N8N <${SMTP_USERNAME}>"
      - WEBHOOK_URL=https://${N8N_SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${TZ}
    volumes:
      - ./data/n8n:/home/node/.n8n
    networks:
      - adri-network

networks:
  adri-network:
    driver: bridge
  cloudbeaver:
    external: true
  appsmith-network:
    external: true