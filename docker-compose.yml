services:
  evolution-api:
    container_name: adri_evolution_api
    image: atendai/evolution-api
    restart: always
    ports:
      - "8888:8080"
    env_file: .env
    volumes:
      - ./data/evolution-api/store:/evolution/store
      - ./data/evolution-api/instances:/evolution/instances
    depends_on:
      - mongo
      - evolution-redis

  evolution-redis:
    container_name: adri_evolution_redis
    image: redis
    restart: unless-stopped
    volumes:
      - ./data/redis:/data

  mongo:
    container_name: adri_evolution_db
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASS}
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo-db:/data

  typebot-db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - ./data/psql-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASS}
    ports:
      - '5438:5432'

  typebot-builder:
    image: baptistearno/typebot-builder:latest
    restart: always
    depends_on:
      - typebot-db
    ports:
      - '3057:3000'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file: .env

  typebot-viewer:
    image: baptistearno/typebot-viewer:latest
    restart: always
    ports:
      - '3056:3000'
    env_file: .env

  chatwoot-base: &chatwoot-base
    image: chatwoot/chatwoot:latest
    env_file: .env.chatwoot
    volumes:
      - ./data/chatwoot/storage:/app/storage

  chatwoot-rails:
    <<: *chatwoot-base
    depends_on:
      - chatwoot-db
      - chatwoot-redis
    ports:
      - '${CHATWOOT_PORT}:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    <<: *chatwoot-base
    depends_on:
      - chatwoot-db
      - chatwoot-redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  chatwoot-db:
    image: postgres:12
    restart: always
    env_file: .env.chatwoot
    volumes:
      - ./data/chatwoot/postgres:/var/lib/postgresql/data

  chatwoot-redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - ./data/chatwoot/redis:/data

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${N8N_SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${TZ}
    volumes:
      - ./data/n8n:/home/node/.n8n